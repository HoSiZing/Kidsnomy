from gensim.models import Word2Vec
import json
import re

# Word2Vec 모델 학습을 위한 카테고리 리스트 (각 항목을 단일 단어 리스트로 변환)
# category_list = [['교육'], ['의료'], ['취미'], ['식비'], ['카페', '간식'], ['쇼핑'],
#                  ['문구점'], ['미용'], ['문화'], ['도서'], ['생활'], ['교통']]
'''
category_list = [
    ['교육', '학원비를 결제했다.', '영어 수업을 신청했다.', '온라인 강의를 수강했다.', '대학 등록금을 납부했다.', '수학 과외를 받았다.'],
    ['의료', '병원에서 진료를 받았다.', '치과에서 스케일링을 했다.', '약국에서 감기약을 샀다.', '건강검진을 받았다.', '정형외과에서 물리치료를 받았다.'],
    ['취미', '피아노 레슨을 등록했다.', '수영장을 등록하고 다니기 시작했다.', '그림을 그리기 위해 캔버스를 구매했다.', '카메라 장비를 새로 샀다.', '요가 학원에서 필라테스를 배웠다.'],
    ['식비', '저녁으로 고기를 구워 먹었다.', '편의점에서 삼각김밥과 라면을 샀다.', '점심으로 김치찌개를 먹었다.', '배달로 피자를 주문했다.', '음식 재료를 사서 집에서 요리했다.'],
    ['카페', '스타벅스에서 아메리카노를 마셨다.', '베이커리에서 크루아상을 샀다.', '편의점에서 초콜릿과 과자를 샀다.', '카페에서 친구와 수다를 떨었다.', '디저트 가게에서 마카롱을 먹었다.'],
    ['쇼핑', '백화점에서 옷을 새로 샀다.', '신발을 온라인으로 주문했다.', '가방을 구매했다.', '할인 행사에서 화장품을 샀다.', '백화점에서 명품 지갑을 샀다.'],
    ['문구점', '노트와 볼펜을 샀다.', '다이어리를 새로 장만했다.', '색연필과 크레파스를 구매했다.', '학용품을 사기 위해 문구점에 갔다.', '마커펜과 메모지를 샀다.'],
    ['미용', '미용실에서 머리를 염색했다.', '네일아트를 받았다.', '피부과에서 레이저 시술을 받았다.', '마사지숍에서 얼굴 관리를 받았다.', '화장품을 새로 샀다.'],
    ['문화', '영화관에서 영화를 봤다.', '뮤지컬 공연을 관람했다.', '미술관에서 전시회를 감상했다.', '콘서트 티켓을 예매했다.', '연극을 보러 극장에 갔다.'],
    ['도서', '서점에서 소설책을 샀다.', '도서관에서 책을 빌렸다.', '전자책을 다운로드했다.', '자기계발서를 구매했다.', '책을 읽으며 독서를 즐겼다.'],
    ['생활', '세제를 사러 마트에 갔다.', '생필품을 대량으로 구매했다.', '빨래용 세제를 샀다.', '휴지를 사러 다이소에 갔다.', '전자제품을 교체했다.'],
    ['교통', '버스를 타고 출근했다.', '지하철을 이용해서 이동했다.', '택시를 타고 집에 갔다.', '기름을 주유했다.', '고속도로 통행료를 냈다.']
]
'''
category_list = [
    ['교육',
     '영어 회화 실력을 늘리기 위해 어학원을 등록하고 첫 수업을 들었다.',
     '대학교 등록금을 납부하면서 학자금 대출도 함께 신청했다.',
     '온라인 강의를 신청하고 출석 체크를 놓치지 않으려고 알람을 설정했다.',
     '아이의 초등학교 방과 후 수업을 신청하고 교재비까지 함께 결제했다.',
     '프로그래밍을 배우기 위해 코딩 부트캠프를 등록하고 첫 프로젝트를 시작했다.'],

    ['의료',
     '감기가 심해져서 근처 병원에서 진료를 받고 처방전을 받아왔다.',
     '치과에서 충치 치료를 받았는데 마취가 덜 풀려서 이상한 느낌이 들었다.',
     '몸이 계속 피곤해서 건강검진을 예약하고 혈액 검사를 진행했다.',
     '허리가 아파서 정형외과에 방문했더니 물리치료를 권장받았다.',
     '피부과에서 여드름 치료를 받기 위해 진료를 보고 연고를 처방받았다.'],

    ['취미',
     '오래된 기타를 꺼내서 다시 연습해 보려고 유튜브 강의를 찾아봤다.',
     '카메라 렌즈를 새로 구매하고 주말마다 사진 촬영을 다니기로 했다.',
     '요가 학원에 등록하고 첫 수업에서 스트레칭을 배웠다.',
     '집에서 쉽게 할 수 있는 캘리그래피를 배우기 위해 재료를 샀다.',
     '보드게임을 사서 친구들과 함께 게임을 하며 시간을 보냈다.'],

    ['식비',
     '오늘 저녁은 특별하게 삼겹살을 사 와서 가족들과 함께 구워 먹었다.',
     '점심시간에 회사 동료들과 함께 근처 식당에서 된장찌개를 먹었다.',
     '마트에서 신선한 채소와 고기를 사서 직접 요리를 해보려고 한다.',
     '햄버거가 먹고 싶어서 패스트푸드점에서 세트 메뉴를 주문했다.',
     '냉장고가 텅 비어서 배달 앱으로 치킨과 피자를 주문했다.',],

    ['카페',
     '스터디 카페에서 집중해서 공부하려고 커피 한 잔을 주문했다.',
     '베이커리에서 갓 구운 크루아상을 사서 아침 식사로 먹었다.',
     '친구와 오랜만에 만나 카페에서 디저트를 먹으며 대화를 나눴다.',
     '편의점에서 간단하게 간식을 사서 출근길에 먹었다.',
     '새로 오픈한 디저트 카페에서 마카롱과 티 세트를 주문했다.'],

    ['쇼핑',
     '백화점에서 새로 나온 가을 코트를 보고 결국 구매했다.',
     '온라인 쇼핑몰에서 운동화를 장바구니에 담고 할인을 기다렸다.',
     '핸드백을 새로 사고 싶어서 브랜드 매장을 직접 방문했다.',
     '화장품이 다 떨어져서 기초 스킨케어 제품을 대량으로 주문했다.',
     '여름맞이 세일을 활용해서 수영복과 선크림을 저렴하게 구매했다.'],

    ['문구점',
     '새 학기가 시작돼서 필기구와 노트를 한꺼번에 구매했다.',
     '일정 관리를 위해 다이어리를 새로 사고 꾸미기용 스티커도 골랐다.',
     '강의 필기할 때 쓰려고 형광펜과 마커펜을 세트로 구매했다.',
     '드로잉 연습을 위해 고급 연필과 스케치북을 장만했다.',
     '책상 정리를 위해 파일 정리함과 서류철을 구매했다.'],

    ['미용',
     '미용실에서 염색과 커트를 같이 했더니 기분 전환이 됐다.',
     '네일아트 예약을 하고 손톱 관리를 받고 왔다.',
     '스킨케어를 위해 피부과에서 레이저 시술을 받았다.',
     '미백 관리를 위해 마사지숍에서 얼굴 관리를 받았다.',
     '화장품 브랜드에서 신제품 립스틱을 테스트하고 구매했다.'],

    ['문화',
     '새로 개봉한 영화를 보기 위해 친구들과 영화관을 찾았다.',
     '뮤지컬 공연이 기대돼서 예매 시작과 동시에 티켓을 구매했다.',
     '미술관에서 유명 화가의 전시를 감상하고 왔다.',
     '콘서트 티켓을 예매했는데 인기 아티스트라 좌석이 금방 매진됐다.',
     '연극을 보러 갔는데 배우들의 연기가 매우 인상적이었다.'],

    ['도서',
     '서점에서 베스트셀러 소설을 구매하고 커피와 함께 읽었다.',
     '도서관에서 필요한 참고서를 빌려서 공부했다.',
     '전자책 리더기를 사서 자기계발서를 다운로드했다.',
     '중고 서점에서 희귀한 고전 문학 책을 찾아냈다.',
     '책을 읽고 독후감을 작성해 보면서 생각을 정리했다.'],

    ['생활',
     '마트에서 생필품을 한꺼번에 장바구니에 담았다.',
     '빨래를 하려고 세제를 새로 사 왔다.',
     '다이소에서 저렴한 주방 용품을 몇 개 구입했다.',
     '집을 꾸미기 위해 인테리어 소품을 샀다.',
     '전기 요금을 절약하기 위해 LED 전구로 교체했다.'],

    ['교통',
     '출근길에 버스를 타고 가다가 교통체증에 걸렸다.',
     '지하철에서 자리를 찾기 어려워서 서서 이동했다.',
     '늦을 것 같아서 급하게 택시를 불러 이동했다.',
     '주유소에서 차량에 기름을 가득 채웠다.',
     '고속도로를 이용해서 여행을 떠나면서 통행료를 지불했다.']
]

# Word2Vec 모델 학습 (vector_size=100, min_count=1)
model = Word2Vec(sentences=category_list, vector_size=100, window=3, min_count=1, workers=4)

# target data
with open("./asset/data.json", "r", encoding="utf-8") as f:
    data = json.load(f)

category_data = data['documents'][0]['category_name']
processed_category_data = [category.strip() for category in re.split(r"[>,]", category_data)]
print(f'기준 단어: {processed_category_data}')

# 모델 업데이트 (입력 데이터를 문장 리스트로 변환)
new_sentences = [processed_category_data]
model.build_vocab(new_sentences, update=True)
model.train(new_sentences, total_examples=len(new_sentences), epochs=1)

# 두 단어 유사도 확인
result = []
for category in category_list:
    word = category[0]  # 리스트에서 첫 번째 단어만 사용
    if word in model.wv and processed_category_data[0] in model.wv:
        similarity = model.wv.similarity(word, processed_category_data[0])
        # print(f"Similarity between '{word}' and '{processed_category_data[0]}': {similarity}")
        result.append([word, similarity])
    else:
        print(f"Word '{word}' or '{processed_category_data[0]}' not in vocabulary.")

sorted_result = sorted(result, key=lambda x: x[1], reverse=True)
for similarity in sorted_result:
    print(similarity)