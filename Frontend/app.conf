# HTTP 서버 (80) - HTTPS 리다이렉트
server {
    listen 80;
    server_name j12b207.p.ssafy.io; # 실제 도메인

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS 서버 (443)
server {
    listen 443 ssl;
    server_name j12b207.p.ssafy.io; # 실제 도메인

    ssl_certificate /etc/letsencrypt/live/j12b207.p.ssafy.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/j12b207.p.ssafy.io/privkey.pem;

    # 프런트엔드
    location / {
        # root /var/www/app;
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    # 백엔드 API
    location /api {
        proxy_pass http://java-app:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # rewrite ^/api/(.*)$ /$1 break;  <-- 선택 사항 (백엔드 설정에 따라)
    }
}
# nginx.conf (또는 nginx/default.conf)

# server {
#     # Nginx 컨테이너 내부에서 80번 포트를 리슨
#     listen 80;
#     # 처리할 호스트 이름 (어떤 호스트명이든 처리하려면 '_', 테스트용이면 localhost)
#     server_name _;

#     # 정적 파일이 위치할 루트 디렉토리 설정
#     # Dockerfile에서 빌드 결과물을 복사할 경로와 일치해야 함
#     root /usr/share/nginx/html;

#     # 디렉토리 요청 시 기본으로 제공할 파일 (Vite 빌드는 index.html)
#     index index.html;

#     # 모든 요청 처리
#     location / {
#         # 요청된 URI에 해당하는 파일($uri)을 찾거나,
#         # 디렉토리($uri/)를 찾거나(index 파일 반환),
#         # 모두 없으면 /index.html 을 반환 (SPA 라우팅 지원)
#         try_files $uri $uri/ /index.html;
#     }

#     location /app {
#         proxy_pass http://java-app:8080;
#     }

# }